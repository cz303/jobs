from telebot.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)

__all__ = ['Markup']


class Markup:
    def __init__(self):
        self.markup = ReplyKeyboardMarkup()
        self.markup.resize_keyboard = True

        self.inline = InlineKeyboardMarkup()

    def start_menu(self):
        texts = ['üè¨ –†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å', 'üë®‚Äçüíª –†–∞–±–æ—Ç–Ω–∏–∫']
        return self.create(texts)

    def create(self, texts: list, inline=None):
        if inline:
            for text in texts:
                if text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å!':
                    self.inline.add(InlineKeyboardButton(
                        text=text,
                        callback_data=text,
                        url='https://t.me/share/url?url=https%3A//telegram'
                            '.me/RS_Work_bot'))
                    return self.inline

                self.inline.add(InlineKeyboardButton(text=text,
                                                     callback_data=text))
            return self.inline

        for text in texts:
            if text == '–ú–æ–π —Å—á–µ—Ç':
                self.markup.row(
                    KeyboardButton(text=text, request_contact=True))
            else:
                self.markup.row(KeyboardButton(text=text))
        return self.markup

    def employer(self):
        texts = ['üì¨ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –¥—Ä—É–∑—å—è–º', '–°–æ–∑–¥–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é', '–ú–æ–∏ –≤–∞–∫–∞–Ω—Å–∏–∏',
                 '–ú–æ–π —Å—á–µ—Ç', '–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º?', 'üè¨ –ò–∑–º–µ–Ω–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç']
        return self.create(texts)

    def worker(self):
        texts = ['üì¨ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –¥—Ä—É–∑—å—è–º', '–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑—é–º–µ', '–ú–æ–∏ —Ä–µ–∑—é–º–µ',
                 '–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π', '–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º?', 'üè¨ –ò–∑–º–µ–Ω–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç']
        return self.create(texts)

    def tell_friends(self):
        texts = ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å!']
        return self.create(texts=texts, inline=True)

    @property
    def categories(self):
        return [
            '1. HR, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º',
            '2. IT, WEB —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã',
            '3. –†–∞–±–æ—Ç–∞ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤',
            '4. –†–µ–∫–ª–∞–º–∞, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, PR',
            '5. –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è, —Ñ–∏–Ω–∞–Ω—Å—ã, —É—á–µ—Ç | –∞—É–¥–∏—Ç',
            '6. –¢—É—Ä–∏–∑–º –∏ —Å–ø–æ—Ä—Ç',
            '7. –Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è, –ø—Ä–∞–≤–æ',
            '8. –ì–æ—Å—Ç–∏–Ω–∏—á–Ω—ã–π –±–∏–∑–Ω–µ—Å',
            '9. –î–∏–∑–∞–π–Ω, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
            '10. –î–æ–º–∞—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å',
            '11. –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥',
            '12. –ö—Ä–∞—Å–æ—Ç–∞ –∏ SPA-—É—Å–ª—É–≥–∏',
            '13. –õ–æ–≥–∏—Å—Ç–∏–∫–∞, –¥–æ—Å—Ç–∞–≤–∫–∞, —Å–∫–ª–∞–¥',
            '14. –ú–µ–¥–∏—Ü–∏–Ω–∞, —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∏–∫–∞',
            '15. –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ',
            '16. –û—Ñ–∏—Å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª',
            '17. –†–µ—Å—Ç–æ—Ä–∞–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å, –∫—É–ª–∏–Ω–∞—Ä–∏—è',
            '18. –°–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ, –∞–≥—Ä–æ–±–∏–∑–Ω–µc',
            '19. –°—Ñ–µ—Ä–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π',
            '20. –¢–æ—Ä–≥–æ–≤–ª—è, –ø—Ä–æ–¥–∞–∂–∏, –∑–∞–∫—É–ø–∫–∏',
            '21. –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å'
        ]

    def create_job(self):
        return self.create(self.categories, inline=True)
