version: '3'

services:
  db:
    image: postgres
    networks:
      - diga_network

  web:
    build: .
    command: python apps/manage.py runserver 0.0.0.0:8000
    environment:
      # указать внешний хост приложения
      - VIRTUAL_HOST=robosapiens.icu
      # указать порт на котором внутри работает приложение
      - VIRTUAL_PORT=8066
      # указать внешний хост для выдачи сертификата
      - LETSENCRYPT_HOST=robosapiens.icu
      # указать емайл для выдачи серитификата
      - LETSENCRYPT_EMAIL=admin@robosapiens.icu
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - diga_network
    depends_on:
      - db

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    labels:
      # такой лейбл позволит контейнеру с цертботом понять, какой из
      # запущенных nginx - реверс-прокси.
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    networks:
      - diga_network
    ports:
      - "80:80"
      - "443:443"
      # - "8066:8066"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /data/nginx/certs:/etc/nginx/certs:ro
      - /data/nginx/vhost.d:/etc/nginx/vhost.d:ro
      - /usr/share/nginx/html

  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-companion
    networks:
      - diga_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /data/nginx/certs:/etc/nginx/certs:rw
      - /data/nginx/vhost.d:/etc/nginx/vhost.d:rw

networks:
  diga_network:
    external: true