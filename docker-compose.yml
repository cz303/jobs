version: '2'

services:
  web:
    restart: always
    build: .
    command: python apps/manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - jobs_network

  sender:
    restart: always
    build: .
    command: python apps/sender/main.py
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "6000:6000"
    networks:
      - jobs_network

  nginx-proxy:
    restart: always
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    networks:
      - jobs_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "certs:/etc/nginx/certs:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"

  letsencrypt-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-companion
    depends_on:
      - nginx-proxy
    volumes_from:
      - nginx-proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "certs:/etc/nginx/certs:rw"
    networks:
      - jobs_network

volumes:
  certs:
  redis-data:

networks:
  jobs_network:
    external: true